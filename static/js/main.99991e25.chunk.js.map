{"version":3,"sources":["components/Navigation/styles/NavigationStyles.js","components/About/cv/resume_AndreasC.pdf","components/Navigation/Navbar.js","components/Navigation/Burger.js","components/Start/styles/StartStyles.js","components/Start/Start.js","assets/images/phone_xkcd_start.webp","assets/images/phone_xkcd_fav.webp","assets/images/imac_sorting_algorithm.webp","assets/images/imac_startpage.webp","assets/videos/sorting_algo_vid.mp4","assets/videos/startpage_vid.mp4","components/Projects/data/ProjectData.js","assets/videos/xkcd_vid.webm","components/Projects/styles/ProjectStyle.js","components/Projects/Projects.js","components/About/styles/ListStyles.js","components/About/EducationList.js","components/About/WorkList.js","components/About/styles/AboutStyles.js","assets/images/profilepic.webp","components/About/About.js","components/Contact/styles/ContactStyles.js","components/Contact/Contact.js","components/Projects/styles/ProjectDetailStyles.js","components/Projects/ProjectsDetail.js","components/index.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","global-styles.js","index.js"],"names":["Container","styled","div","display","Logo","h2","ItemUl","ul","activeClassName","StyledA","a","StyledNavLink","NavLink","attrs","ItemLi","li","SmallNavLi","button","SmallStyledNavLink","SmallNavUlTest","open","StyledBurger","Navbar","displayValue","useLocation","pathname","includes","exact","to","NavigationData","map","item","url","page","id","href","resume","target","rel","Burger","useState","setOpen","document","documentElement","style","overflow","body","scroll","onClick","TextContainer","Title","animated","h1","Description","p","Span","span","useAnimation","ref","useSpring","from","marginLeft","opacity","config","duration","Start","descRef1","useRef","descRef2","descRef3","descRef4","titleRef","descStyle1","descStyle2","descStyle3","descStyle4","titleStyle","color","useChain","ProjectData","title","shortDescription","longDescription","images","imac_sorting_algorithm","imgAlt","video","sorting_algo_vid","stackList","githubLink","direction","bgColor","phone_xkcd_start","phone_xkcd_fav","imac_startpage","startpage_vid","ListContainer","ProjectContainer","TitleSektion","Section","LinkContainer","StyledLink","Link","ExternalLink","TechStackContainer","TechStackItem","ImageContainer","Image","img","Projects","imgSpring","marginBottom","textSpring","marginTop","state","object","src","alt","Alt","ListWrapper","ItemContainer","ItemTitle","ItemInfoContainer","CourseList","CourseLi","Year","Month","Text","DurationContainer","InfoContainer","EducationList","containerSpring","EducationData","startYear","endYear","startMonth","endMonth","degree","school","description","courses","course","WorkList","WorkData","workPlace","techStack","tech","InnerContainer","gap","Heading","About","marginRight","profile_pic","ContainerInner","Details","Contact","containerTrail","useTrail","ContactData","length","props","index","imgURL","details","BackButton","TitleContainer","StackContainer","ImageContainerInner","align","DescriptionContainer","VideoContainer","Video","ProjectDetail","project","setProject","useEffect","fetchProject","window","scrollTo","stackListDiv","selectedProject","location","image","icon","faArrowLeft","autoPlay","loop","muted","type","Navigation","windowDimension","setWindowDimension","isHamMenu","innerWidth","handleResize","addEventListener","removeEventListener","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.99991e25.chunk.js","sourcesContent":["import styled from 'styled-components/macro';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  height: 7vh;\r\n  max-width: 100%;\r\n  display: ${({ display }) => display};\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0px 20px;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Logo = styled.h2`\r\n  position: fixed;\r\n  top: 15px;\r\n  left: 20px;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const ItemUl = styled.ul`\r\n  width: 300px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  list-style: none;\r\n`;\r\n\r\nconst activeClassName = 'nav-item-active';\r\n\r\nexport const StyledA = styled.a`\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  border: none;\r\n  font-size: 0.8rem;\r\n  letter-spacing: 0.15em;\r\n  font-weight: 700;\r\n  color: rgba(20, 20, 20, 0.5);\r\n  border-bottom: transparent solid 2px;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    color: rgba(20, 20, 20, 1);\r\n  }\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs({ activeClassName })`\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  position: relative;\r\n  border: none;\r\n  font-size: 0.8rem;\r\n  letter-spacing: 0.15em;\r\n  font-weight: 700;\r\n  color: rgba(20, 20, 20, 0.5);\r\n  border-bottom: transparent solid 2px;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    color: rgba(20, 20, 20, 1);\r\n  }\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 2px;\r\n    bottom: 40%;\r\n    left: 0;\r\n    background-color: #e85a4f;\r\n    visibility: hidden;\r\n    transform: scaleX(0);\r\n    transition: all 0.2s ease-in-out 0s;\r\n  }\r\n\r\n  :hover::before {\r\n    visibility: visible;\r\n    transform: scaleX(1);\r\n    /* border-bottom: #e85a4f solid 2px; */\r\n  }\r\n\r\n  &.${activeClassName} {\r\n    color: rgba(20, 20, 20, 1);\r\n    text-decoration: line-through #e85a4f 2px;\r\n  }\r\n`;\r\n\r\nexport const ItemLi = styled.li``;\r\n\r\nexport const Button = styled.button`\r\n  font-weight: 700;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n  color: rgba(20, 20, 20, 0.5);\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  :hover {\r\n    color: #e85a4f;\r\n  }\r\n`;\r\n\r\nexport const ContainerSmallScreen = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  top: 20px;\r\n  right: 20px;\r\n  font-size: 2.5rem;\r\n  color: #e85a4f;\r\n  transition: all 1s;\r\n`;\r\n\r\nexport const MenuContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 75%;\r\n  background-color: #eae7dc;\r\n  box-shadow: 1px 0 10px 2px rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nexport const SmallNavUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  margin-left: 20px;\r\n  gap: 2.5rem;\r\n  list-style: none;\r\n  height: 100%;\r\n`;\r\n\r\nexport const SmallNavLi = styled.li`\r\n  font-size: 3rem;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const MenuMask = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const SmallStyledNavLink = styled(NavLink).attrs({ activeClassName })`\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: #f3f3f3;\r\n\r\n  &.${activeClassName} {\r\n    color: #f3f3f3;\r\n    text-decoration: line-through #e85a4f 3px;\r\n  }\r\n`;\r\n\r\n// Här under är de nya stylarna\r\n\r\nexport const SmallNavUlTest = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(-100%)')};\r\n  top: 0;\r\n  left: 0;\r\n  gap: 2.5rem;\r\n  list-style: none;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  transition: all 0.3s ease-in-out;\r\n`;\r\n\r\nexport const StyledBurger = styled.div`\r\n  width: 2.5rem;\r\n  height: 2.5rem;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-flow: column nowrap;\r\n  z-index: 20;\r\n\r\n  div {\r\n    width: 2.5rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ open }) => (open ? '#f3f3f3' : '#000')};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => (open ? 'translateX(100%)' : 'rotate(0)')};\r\n      opacity: ${({ open }) => (open ? 0 : 1)};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/resume_AndreasC.898b8dc4.pdf\";","import React from 'react';\r\nimport {\r\n  Container,\r\n  Logo,\r\n  ItemUl,\r\n  ItemLi,\r\n  Button,\r\n  StyledNavLink,\r\n  StyledA,\r\n} from './styles/NavigationStyles';\r\nimport NavigationData from './data/NavigationData.json';\r\nimport { useLocation } from 'react-router-dom';\r\nimport resume from '../About/cv/resume_AndreasC.pdf';\r\n\r\nexport default function Navbar() {\r\n  const location = useLocation();\r\n  let displayValue;\r\n\r\n  if (location.pathname.includes('/work/')) {\r\n    displayValue = 'none';\r\n  } else {\r\n    displayValue = 'flex';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container display={displayValue}>\r\n        <StyledNavLink exact to='/'>\r\n          <Logo>AC</Logo>\r\n        </StyledNavLink>\r\n        <ItemUl>\r\n          {NavigationData.map((item) => (\r\n            <ItemLi key={item.id}>\r\n              <StyledNavLink to={item.url}>{item.page}</StyledNavLink>\r\n            </ItemLi>\r\n          ))}\r\n        </ItemUl>\r\n        <StyledA href={resume} target='_blank' rel='noreferrer'>\r\n          Resume\r\n        </StyledA>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport NavigationData from './data/NavigationData.json';\r\n\r\nimport {\r\n  StyledNavLink,\r\n  Logo,\r\n  StyledBurger,\r\n  SmallNavUlTest,\r\n  SmallNavLi,\r\n  SmallStyledNavLink,\r\n} from './styles/NavigationStyles';\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  if (open === true) {\r\n    document.documentElement.style.overflow = 'hidden';\r\n    document.body.scroll = 'no';\r\n  } else {\r\n    document.documentElement.style.overflow = 'scroll';\r\n    document.body.scroll = 'yes';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledNavLink exact to='/'>\r\n        <Logo>AC</Logo>\r\n      </StyledNavLink>\r\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <SmallNavUlTest open={open}>\r\n        {NavigationData.map((item) => (\r\n          <SmallNavLi key={item.id} onClick={() => setOpen(!open)}>\r\n            <SmallStyledNavLink to={item.url}>{item.page}</SmallStyledNavLink>\r\n          </SmallNavLi>\r\n        ))}\r\n      </SmallNavUlTest>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import styled from 'styled-components/macro';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 90vh;\r\n  width: 100%;\r\n\r\n  @media (max-width: 480px) {\r\n    min-height: 100vh;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 70%;\r\n  margin-bottom: 5rem;\r\n\r\n  @media (max-width: 480px) {\r\n    width: 100%;\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(animated.h1)`\r\n  font-weight: bold;\r\n  font-size: 5rem;\r\n  color: #e85a4f;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  @media (max-width: 480px) {\r\n    line-height: 3.5rem;\r\n    font-size: 4rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Description = styled(animated.p)`\r\n  font-size: 2rem;\r\n  margin-top: 3px;\r\n\r\n  @media (max-width: 480px) {\r\n    margin-top: 0.5rem;\r\n    font-size: 1.4rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  color: #e85a4f;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { Container, TextContainer, Title, Description, Span } from './styles/StartStyles';\r\nimport { useSpring, useChain } from 'react-spring';\r\n\r\nfunction Start() {\r\n  const descRef1 = useRef();\r\n  const descRef2 = useRef();\r\n  const descRef3 = useRef();\r\n  const descRef4 = useRef();\r\n\r\n  const titleRef = useRef();\r\n\r\n  const descStyle1 = useAnimation(descRef1);\r\n  const descStyle2 = useAnimation(descRef2);\r\n  const descStyle3 = useAnimation(descRef3);\r\n  const descStyle4 = useAnimation(descRef4);\r\n\r\n  const titleStyle = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      color: 'black',\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n      color: '#e85a4f',\r\n    },\r\n    ref: titleRef,\r\n    duration: 500,\r\n  });\r\n\r\n  useChain([descRef1, descRef2, descRef3, descRef4, titleRef]);\r\n\r\n  return (\r\n    <Container>\r\n      <TextContainer>\r\n        <Title style={titleStyle}>Andreas Carlsson.</Title>\r\n        <Description style={descStyle1}>Aspiring developer.</Description>\r\n        <Description style={descStyle2}>Gothenburg, Sweden.</Description>\r\n        <Description style={descStyle3}>\r\n          Minigolf<Span> [</Span>semi<Span>] </Span>pro.\r\n        </Description>\r\n        <Description style={descStyle4}>Creative thinking.</Description>\r\n      </TextContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useAnimation = (ref) => {\r\n  const spring = useSpring({\r\n    from: {\r\n      marginLeft: -50,\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      marginLeft: 0,\r\n      opacity: 1,\r\n    },\r\n    ref: ref,\r\n    config: {\r\n      duration: 500,\r\n    },\r\n  });\r\n  return spring;\r\n};\r\n\r\nexport default Start;\r\n","export default __webpack_public_path__ + \"static/media/phone_xkcd_start.14c010de.webp\";","export default __webpack_public_path__ + \"static/media/phone_xkcd_fav.9fd67504.webp\";","export default __webpack_public_path__ + \"static/media/imac_sorting_algorithm.c0fb08aa.webp\";","export default __webpack_public_path__ + \"static/media/imac_startpage.6330d70b.webp\";","export default __webpack_public_path__ + \"static/media/sorting_algo_vid.cf26d7ec.mp4\";","export default __webpack_public_path__ + \"static/media/startpage_vid.44cbade5.mp4\";","import phone_xkcd_start from '../../../assets/images/phone_xkcd_start.webp';\r\nimport phone_xkcd_fav from '../../../assets/images/phone_xkcd_fav.webp';\r\nimport imac_sorting_algorithm from '../../../assets/images/imac_sorting_algorithm.webp';\r\nimport imac_startpage from '../../../assets/images/imac_startpage.webp';\r\nimport sorting_algo_vid from '../../../assets/videos/sorting_algo_vid.mp4';\r\nimport startpage_vid from '../../../assets/videos/startpage_vid.mp4';\r\nimport xkcd_vid from '../../../assets/videos/xkcd_vid.webm';\r\n\r\nconst ProjectData = [\r\n  {\r\n    id: 1,\r\n    title: 'Sorting Algorithm Visualizer',\r\n    shortDescription:\r\n      'Web app created with Blazor that is visualising different sorting algorithms.',\r\n    longDescription:\r\n      'This is a web app developed in Blazor with C#, html, css. I had two primary goals for this project. First of all I wanted to try microsoft´s newest framework Blazor. Secondly I wanted to explore what different sorting algorithms there are and how I could visualize them.',\r\n    images: [imac_sorting_algorithm],\r\n    imgAlt: 'Algorith Visualization',\r\n    video: sorting_algo_vid,\r\n    stackList: ['Blazor', 'C#', 'html', 'css'],\r\n    githubLink: 'https://github.com/AndyCarlsson/blazor-sorting-visualization',\r\n    direction: 'row',\r\n    bgColor: '#EAE7DC',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'xkcd comic app',\r\n    shortDescription:\r\n      'Mobile app made with Xamarin forms that fetches random xkcd-comics and lets you save your favorites.',\r\n    longDescription:\r\n      'This is a android app developed in Xamarin Forms with C# and XAML. In this project I wanted to focus on good code structure and Xamarin best practices. Following the mvvm pattern I learned the importance of creating a code structure with loose coupling.',\r\n    images: [phone_xkcd_start, phone_xkcd_fav],\r\n    imgAlt: 'xkcd comic',\r\n    video: xkcd_vid,\r\n    stackList: ['Xamarin Forms', 'C#', 'xaml'],\r\n    githubLink: 'https://github.com/AndyCarlsson/xkcd-comic-xamarinforms',\r\n    direction: 'row-reverse',\r\n    bgColor: '#dbd9d3',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Startpage',\r\n    shortDescription:\r\n      'This is a starpage for the web customized with my personally most visited websites and information at hand.',\r\n    longDescription:\r\n      'This is a personalized startpage with my favourite websites at hand. My main focus in this project was to create a clean design with well thought out color combinations.',\r\n    images: [imac_startpage],\r\n    imgAlt: 'Startpage',\r\n    video: startpage_vid,\r\n    stackList: ['html', 'css', 'js'],\r\n    githubLink: 'https://github.com/AndyCarlsson/startpage',\r\n    direction: 'row',\r\n    bgColor: '#EAE7DC',\r\n  },\r\n];\r\n\r\nexport default ProjectData;\r\n","export default __webpack_public_path__ + \"static/media/xkcd_vid.9c3411b6.webm\";","import styled from 'styled-components/macro';\r\nimport { Link } from 'react-router-dom';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  min-height: 93vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media (max-width: 768px) {\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n\r\nexport const ListContainer = styled(animated.div)`\r\n  width: 100%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n  padding: 20px;\r\n\r\n  @media (max-width: 480px) {\r\n    margin-top: 7vh;\r\n  }\r\n`;\r\n\r\nexport const ProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction};\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 40vh;\r\n  width: 60%;\r\n  gap: 2rem;\r\n  border-radius: 5px;\r\n\r\n  @media (max-width: 1450px) {\r\n    height: 100%;\r\n    width: 100%;\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nexport const TitleSektion = styled.div`\r\n  height: 100%;\r\n\r\n  @media (max-width: 480px) {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const Section = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  min-height: 100%;\r\n  width: 50%;\r\n\r\n  @media (max-width: 480px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin: 0;\r\n  margin-bottom: 10px;\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 1.7rem;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 1.3rem;\r\n  margin-top: 1.3rem;\r\n`;\r\n\r\nexport const LinkContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: #e85a4f;\r\n  color: white;\r\n  padding: 0.5rem 0.7rem;\r\n  border: 1px solid transparent;\r\n  border-radius: 25px;\r\n  transition: all 0.3s;\r\n\r\n  :hover {\r\n    background-color: transparent;\r\n    color: #e85a4f;\r\n    border: 1px solid #e85a4f;\r\n  }\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  text-decoration: none;\r\n  color: #141414;\r\n`;\r\n\r\nexport const TechStackContainer = styled.div`\r\n  display: flex;\r\n  gap: 1.3rem;\r\n`;\r\n\r\nexport const TechStackItem = styled.p`\r\n  font-weight: 700;\r\n  color: #e85a4f;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  height: 45vh;\r\n`;\r\n\r\nexport const Image = styled(animated.img)`\r\n  height: 100%;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    height: 80%;\r\n  }\r\n`;\r\n","import React from 'react';\r\n// import ProjectData from './data/ProjectData.json';\r\nimport ProjectData from './data/ProjectData.js';\r\n\r\nimport { useSpring } from 'react-spring';\r\n\r\nimport {\r\n  Container,\r\n  ListContainer,\r\n  ProjectContainer,\r\n  TitleSektion,\r\n  Section,\r\n  Title,\r\n  Description,\r\n  LinkContainer,\r\n  StyledLink,\r\n  ExternalLink,\r\n  TechStackContainer,\r\n  TechStackItem,\r\n  ImageContainer,\r\n  Image,\r\n} from './styles/ProjectStyle';\r\n\r\nexport default function Projects() {\r\n  const imgSpring = useSpring({\r\n    from: {\r\n      opacity: 0,\r\n      marginBottom: 50,\r\n    },\r\n    to: {\r\n      opacity: 1,\r\n      marginBottom: 0,\r\n    },\r\n  });\r\n\r\n  const textSpring = useSpring({\r\n    from: {\r\n      marginTop: 50,\r\n    },\r\n    to: {\r\n      marginTop: 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      {ProjectData.map((item) => (\r\n        <ListContainer item={item} key={item.id} bgColor={item.bgColor}>\r\n          <ProjectContainer direction={item.direction}>\r\n            <Section style={textSpring}>\r\n              <TitleSektion>\r\n                <Title>{item.title}</Title>\r\n                <TechStackContainer>\r\n                  {item.stackList.map((item) => (\r\n                    <TechStackItem key={item}>{item}</TechStackItem>\r\n                  ))}\r\n                </TechStackContainer>\r\n                <Description>{item.shortDescription}</Description>\r\n              </TitleSektion>\r\n              <LinkContainer>\r\n                <ExternalLink href={item.githubLink} rel='noreferrer' target='_blank'>\r\n                  Github\r\n                </ExternalLink>\r\n                <StyledLink\r\n                  to={{\r\n                    pathname: `/work/${item.title}`,\r\n                    state: {\r\n                      object: item,\r\n                    },\r\n                  }}>\r\n                  Details\r\n                </StyledLink>\r\n              </LinkContainer>\r\n            </Section>\r\n            <Section style={imgSpring}>\r\n              <ImageContainer>\r\n                <Image src={item.images[0]} alt={item.Alt} />\r\n              </ImageContainer>\r\n            </Section>\r\n          </ProjectContainer>\r\n        </ListContainer>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components/macro';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 70vh;\r\n  background-color: ${({ bgColor }) => bgColor};\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: 20% 50%;\r\n  width: 100%;\r\n  min-height: 60vh;\r\n  grid-row-gap: 1rem;\r\n  grid-column-gap: 5rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 3rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 1.5rem;\r\n  transform: rotate(-90deg);\r\n  text-transform: uppercase;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  grid-row: 1 / span 2;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    transform: rotate(0deg);\r\n    width: 90%;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 481px) and (max-width: 768px) {\r\n    transform: rotate(0deg);\r\n    width: 90%;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const ItemContainer = styled(animated.div)`\r\n  grid-column: 2;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: 90%;\r\n    align-items: flex-start;\r\n    gap: 1rem;\r\n    flex-direction: column;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 481px) and (max-width: 768px) {\r\n    width: 90%;\r\n    align-items: flex-start;\r\n    gap: 0rem;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ItemTitle = styled.h2`\r\n  font-size: 1.2rem;\r\n  margin-bottom: 7px;\r\n  color: #e85a4f;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const ItemInfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  font-weight: 700;\r\n  gap: 0.5rem;\r\n  margin-bottom: 7px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    span {\r\n      display: none;\r\n    }\r\n\r\n    gap: 0;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const CourseList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.3rem;\r\n  margin: 10px 1rem;\r\n`;\r\n\r\nexport const CourseLi = styled.li``;\r\n\r\nexport const Year = styled.h2`\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport const Month = styled.p`\r\n  font-weight: 700;\r\n  color: #e85a4f;\r\n`;\r\n\r\nexport const Text = styled.p``;\r\n\r\nexport const Span = styled.span`\r\n  margin: 0.2rem;\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nexport const DurationContainer = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-template-columns: auto auto auto;\r\n  grid-template-rows: 1.8rem 1rem;\r\n  row-gap: 0;\r\n`;\r\n\r\nexport const InfoContainer = styled.div`\r\n  min-width: 60%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  border-radius: 10px;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  Year,\r\n  Month,\r\n  Container,\r\n  ListWrapper,\r\n  Title,\r\n  ItemContainer,\r\n  ItemInfoContainer,\r\n  CourseList,\r\n  CourseLi,\r\n  ItemTitle,\r\n  Text,\r\n  Span,\r\n  DurationContainer,\r\n  InfoContainer,\r\n} from './styles/ListStyles';\r\nimport EducationData from './data/EducationData.json';\r\nimport { useSpring } from 'react-spring';\r\n\r\nfunction EducationList() {\r\n  const containerSpring = useSpring({\r\n    from: { marginTop: 40 },\r\n    to: { marginTop: 0 },\r\n  });\r\n\r\n  return (\r\n    <ListWrapper bgColor='#dbd9d3'>\r\n      <Container>\r\n        <Title>Education</Title>\r\n        {EducationData.map((item) => {\r\n          return (\r\n            <ItemContainer key={item.id} style={containerSpring}>\r\n              <DurationContainer>\r\n                <Year>{item.startYear}</Year>\r\n                <Span>-</Span>\r\n                <Year>{item.endYear}</Year>\r\n                <Month>{item.startMonth}</Month>\r\n                <Span></Span>\r\n                <Month>{item.endMonth}</Month>\r\n              </DurationContainer>\r\n              <InfoContainer>\r\n                <ItemTitle>{item.title}</ItemTitle>\r\n                <ItemInfoContainer>\r\n                  <Text>{item.degree}</Text>\r\n                  <span>|</span>\r\n                  <Text>{item.school}</Text>\r\n                </ItemInfoContainer>\r\n                <Text>{item.description}</Text>\r\n                <CourseList>\r\n                  {item.courses.map((course) => {\r\n                    return <CourseLi key={course.id}>{course.title}</CourseLi>;\r\n                  })}\r\n                </CourseList>\r\n              </InfoContainer>\r\n            </ItemContainer>\r\n          );\r\n        })}\r\n      </Container>\r\n    </ListWrapper>\r\n  );\r\n}\r\n\r\nexport default EducationList;\r\n","import React from 'react';\r\nimport {\r\n  ListWrapper,\r\n  Container,\r\n  Title,\r\n  ItemContainer,\r\n  Year,\r\n  Month,\r\n  ItemTitle,\r\n  Text,\r\n  CourseList,\r\n  CourseLi,\r\n  Span,\r\n  DurationContainer,\r\n  InfoContainer,\r\n  ItemInfoContainer,\r\n} from './styles/ListStyles';\r\nimport WorkData from './data/WorkData.json';\r\n\r\nfunction WorkList() {\r\n  return (\r\n    <ListWrapper bgColor='#EAE7DC'>\r\n      <Container>\r\n        <Title>Work</Title>\r\n        {WorkData.map((item) => {\r\n          return (\r\n            <ItemContainer key={item.id}>\r\n              <DurationContainer>\r\n                <Year>{item.startYear}</Year>\r\n                <Span>-</Span>\r\n                <Year>{item.endYear}</Year>\r\n                <Month>{item.startMonth}</Month>\r\n                <Span></Span>\r\n                <Month>{item.endMonth}</Month>\r\n              </DurationContainer>\r\n              <InfoContainer>\r\n                <ItemTitle>{item.title}</ItemTitle>\r\n                <ItemInfoContainer>\r\n                  <Text>{item.workPlace}</Text>\r\n                </ItemInfoContainer>\r\n                <Text>{item.description}</Text>\r\n                <CourseList>\r\n                  {item.techStack.map((tech) => {\r\n                    return <CourseLi key={tech.id}>{tech.title}</CourseLi>;\r\n                  })}\r\n                </CourseList>\r\n              </InfoContainer>\r\n            </ItemContainer>\r\n          );\r\n        })}\r\n      </Container>\r\n    </ListWrapper>\r\n  );\r\n}\r\n\r\nexport default WorkList;\r\n","import styled from 'styled-components/macro';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const Container = styled.div`\r\n  min-height: 93vh;\r\n  width: 100%;\r\n  gap: 10rem;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    margin-top: 12vh;\r\n    flex-direction: column;\r\n    gap: 0rem;\r\n  }\r\n`;\r\n\r\nexport const Section = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction};\r\n  gap: ${({ gap }) => gap};\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  min-height: 93vh;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: 70vh;\r\n  width: 50%;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Image = styled(animated.img)`\r\n  height: 100%;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const TextContainer = styled(animated.div)`\r\n  width: 40%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 0.5rem;\r\n\r\n  @media only screen and (max-width: 481px) {\r\n    margin-bottom: 3rem;\r\n    width: 80%;\r\n  }\r\n\r\n  @media only screen and (min-width: 481px) and (max-width: 1024px) {\r\n    margin-bottom: 3rem;\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const Heading = styled.h1``;\r\n\r\nexport const Text = styled.p`\r\n  @media only screen and (max-width: 1024px) {\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/profilepic.c12134e1.webp\";","import React from 'react';\r\nimport EducationList from './EducationList';\r\nimport WorkList from './WorkList';\r\nimport {\r\n  Container,\r\n  InnerContainer,\r\n  ImageContainer,\r\n  Image,\r\n  TextContainer,\r\n  Heading,\r\n  Text,\r\n  Section,\r\n} from './styles/AboutStyles';\r\nimport profile_pic from '../../assets/images/profilepic.webp';\r\nimport { useSpring } from 'react-spring';\r\n\r\nfunction About() {\r\n  const imgSpring = useSpring({\r\n    from: {\r\n      marginRight: 20,\r\n    },\r\n    to: {\r\n      marginRight: 0,\r\n    },\r\n  });\r\n\r\n  const textSpring = useSpring({\r\n    from: {\r\n      marginLeft: 20,\r\n    },\r\n    to: {\r\n      marginLeft: 0,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <InnerContainer>\r\n        <Section direction='row' gap='5rem'>\r\n          <ImageContainer>\r\n            <Image src={profile_pic} style={imgSpring} />\r\n          </ImageContainer>\r\n          <TextContainer style={textSpring}>\r\n            <Heading>Hi!</Heading>\r\n            <Text>\r\n              My name is Andreas Carlsson. I am an aspiring developer from Gothenburg, Sweden.\r\n            </Text>\r\n            <Text>Learning new things and trying out stuff is what really motivates me.</Text>\r\n            <Text>\r\n              My goal is to one day be that guy that everyone comes to when they are stuck and need\r\n              input about a problem.\r\n            </Text>\r\n          </TextContainer>\r\n        </Section>\r\n        <Section direction='column'>\r\n          <EducationList />\r\n          <WorkList />\r\n        </Section>\r\n      </InnerContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import styled from 'styled-components/macro';\r\nimport { animated } from 'react-spring';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 100%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ContainerInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 2rem;\r\n  width: 50%;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    min-width: 100%;\r\n    justify-content: center;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    min-width: 90%;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const ItemContainer = styled(animated.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  background-color: #dbd9d3;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    gap: 0.2rem;\r\n  }\r\n\r\n  @media only screen and (min-width: 481px) and (max-width: 1024px) {\r\n    gap: 0.2rem;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  @media only screen and (max-width: 480px) {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nexport const Details = styled.h2`\r\n  @media only screen and (max-width: 480px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ContactData from './data/ContactData.json';\r\nimport { Container, ContainerInner, ItemContainer, Image, Details } from './styles/ContactStyles';\r\nimport { useTrail } from 'react-spring';\r\n\r\nfunction Contact() {\r\n  const containerTrail = useTrail(ContactData.length, {\r\n    from: {\r\n      marginRight: 100,\r\n      opacity: 0,\r\n    },\r\n    to: {\r\n      marginRight: 0,\r\n      opacity: 1,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerInner>\r\n        {containerTrail.map((props, index) => (\r\n          <ItemContainer key={ContactData[index].id} style={props}>\r\n            <Image src={ContactData[index].imgURL} alt={ContactData[index].imgAlt} />\r\n            <Details>{ContactData[index].details}</Details>\r\n          </ItemContainer>\r\n        ))}\r\n      </ContainerInner>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import styled from 'styled-components/macro';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n  min-height: 93vh;\r\n  width: 100%;\r\n  margin-top: 10rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5rem;\r\n\r\n  @media (max-width: 480px) {\r\n    min-height: 100vh;\r\n    margin-top: 0;\r\n    gap: 2rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    min-height: 100vh;\r\n    margin-top: 0;\r\n    gap: 2rem;\r\n  }\r\n`;\r\n\r\nexport const BackButton = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  position: fixed;\r\n  top: 10%;\r\n  left: 5%;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  color: rgba(20, 20, 20, 0.5);\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  :hover {\r\n    color: rgba(20, 20, 20, 1);\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const ContainerInner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    margin-top: 10vh;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    margin-top: 10vh;\r\n    gap: 5rem;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 70%;\r\n\r\n  @media (max-width: 480px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const StackContainer = styled.div`\r\n  font-weight: 700;\r\n  color: #e85a4f;\r\n  display: flex;\r\n  gap: 1.3rem;\r\n`;\r\n\r\nexport const TechStackItem = styled.p`\r\n  font-weight: 700;\r\n  color: #e85a4f;\r\n`;\r\n\r\nexport const Title = styled.h1``;\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80vh;\r\n  gap: 5rem;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const ImageContainerInner = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: ${({ align }) => align};\r\n  height: 60vh;\r\n  width: 20%;\r\n\r\n  @media (max-width: 480px) {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  /* width: 100%; */\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const DescriptionContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #dbd9d3;\r\n  padding: 2rem;\r\n  border-radius: 10px;\r\n  width: 30%;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    width: 100%;\r\n    border-radius: 0px;\r\n  }\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport const VideoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 50vh;\r\n  width: 70%;\r\n  height: 75vh;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-bottom: 8rem;\r\n  }\r\n`;\r\n\r\nexport const Video = styled.video`\r\n  height: 100%;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  BackButton,\r\n  ContainerInner,\r\n  TitleContainer,\r\n  Title,\r\n  TechStackItem,\r\n  ImageContainer,\r\n  ImageContainerInner,\r\n  Image,\r\n  DescriptionContainer,\r\n  Description,\r\n  VideoContainer,\r\n  Video,\r\n  StackContainer,\r\n} from './styles/ProjectDetailStyles';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function ProjectDetail(props) {\r\n  const [project, setProject] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchProject();\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const fetchProject = () => {\r\n    const selectedProject = props.location.state.object;\r\n    setProject(selectedProject);\r\n  };\r\n\r\n  let stackListDiv;\r\n  if (project.stackList) {\r\n    stackListDiv = project.stackList.map((item) => {\r\n      return <TechStackItem key={item}>{item}</TechStackItem>;\r\n    });\r\n  }\r\n\r\n  let images;\r\n  if (project.images) {\r\n    images = project.images.map((image, index) => {\r\n      return (\r\n        <ImageContainerInner align='center' key={index}>\r\n          <Image src={image} />\r\n        </ImageContainerInner>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <BackButton to='/work'>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n        Back\r\n      </BackButton>\r\n      <ContainerInner>\r\n        <TitleContainer>\r\n          <Title>{project.title}</Title>\r\n          <StackContainer>{stackListDiv}</StackContainer>\r\n        </TitleContainer>\r\n        <ImageContainer>{images}</ImageContainer>\r\n        <DescriptionContainer>\r\n          <Description>{project.longDescription}</Description>\r\n        </DescriptionContainer>\r\n        <VideoContainer>\r\n          <Video autoPlay loop muted>\r\n            <source src={project.video} type='video/mp4' />\r\n          </Video>\r\n        </VideoContainer>\r\n      </ContainerInner>\r\n    </Container>\r\n  );\r\n}\r\n","import Navigation from './Navigation/Navigation';\r\nimport Start from './Start/Start';\r\nimport Projects from './Projects/Projects';\r\nimport About from './About/About';\r\nimport Contact from './Contact/Contact';\r\nimport ProjectDetail from './Projects/ProjectsDetail';\r\n\r\nexport default Navigation;\r\n\r\nexport { Start, Projects, About, Contact, ProjectDetail };\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Burger from './Burger';\r\n\r\nexport default function Navigation() {\r\n  const [windowDimension, setWindowDimension] = useState(null);\r\n\r\n  const isHamMenu = windowDimension <= 1024;\r\n\r\n  useEffect(() => {\r\n    setWindowDimension(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimension(window.innerWidth);\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return <>{isHamMenu ? <Burger /> : <Navbar />}</>;\r\n}\r\n","import React from 'react';\r\nimport Navigation, { Start, Projects, ProjectDetail, About, Contact } from './components/index';\r\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename='/'>\r\n      <Navigation />\r\n      <Switch>\r\n        <Route path='/' exact component={Start} />\r\n        <Route path='/work' exact component={Projects} />\r\n        <Route path='/work/:id' component={ProjectDetail} />\r\n        <Route path='/about' component={About} />\r\n        <Route path='/contact' component={Contact} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  font-family: 'Montserrat', sans-serif;\r\n  color: #141414;\r\n  background-color: #EAE7DC;\r\n  font-size: 16px;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n}\r\n\r\np{\r\n  line-height: 1.4;\r\n}\r\n\r\n\r\n::-webkit-scrollbar {\r\n  width: 0px; /* Remove scrollbar space */\r\n  background: transparent; /* Optional: just make scrollbar invisible */\r\n}\r\n\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { GlobalStyles } from './global-styles';\r\nimport { Normalize } from 'styled-normalize';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Normalize />\r\n    <GlobalStyles />\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}